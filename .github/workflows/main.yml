name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          architecture: x64

      - uses: actions/checkout@v3

      - name: Download UPX [windows-latest]
        uses: i3h/download-release-asset@v1.3.2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          owner: upx
          repo: upx
          tag: v4.2.1
          file: upx-4.2.1-win64.zip

      - name: Extract UPX [windows-latest]
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          7z x upx-4.2.1-win64.zip
          copy upx-4.2.1-win64\upx.exe upx.exe

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
          python -m pipenv install --dev

      - name: Test
        run: python -m pipenv run pytest

      - name: Build [windows-latest]
        if: ${{ matrix.os == 'windows-latest' }}
        run: python -m pipenv run build_win_installer.bat

      - name: Upload a Build Artifact [windows-latest]
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: shortcircuit.exe
          path: ./dist/shortcircuit.exe

      - name: Build [macos-latest]
        if: ${{ matrix.os == 'macos-latest' }}
        run: python -m pipenv run ./build_mac_installer.sh

      - name: Upload a Build Artifact [macos-latest]
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          name: shortcircuit.app.tar.gz
          path: ./dist/shortcircuit.app.tar.gz
